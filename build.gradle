plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "nebula.integtest" version "8.2.0"
	id 'com.palantir.docker' version '0.33.0'
	id 'com.palantir.docker-run' version '0.33.0'
//	id "com.bmuschko.docker-remote-api" version "7.4.0"
//	id "com.bmuschko.docker-spring-boot-application" version "7.4.0"
//	id "com.bmuschko.docker-java-application" version "7.4.0"

}

//import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
//import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
//import com.bmuschko.gradle.docker.tasks.image.Dockerfile

repositories {
	mavenCentral()
	gradlePluginPortal()
	maven { url "https://repo.spring.io/milestone" }
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://build.shibboleth.net/nexus/content/repositories/releases/" }
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '11'
targetCompatibility = '11'
def dockerHub = 'dalexander2israel'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


dependencies {
	constraints {
		implementation "org.opensaml:opensaml-core:4.1.1"
		implementation "org.opensaml:opensaml-saml-api:4.1.1"
		implementation "org.opensaml:opensaml-saml-impl:4.1.1"
	}
//	// ----------------------- Thymeleaf dependencies ------_-----------------------
//	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	// --------------------------- Spring dependencies -----------------------------
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/org.springframework/spring-webmvc
	implementation 'org.springframework:spring-webmvc:5.3.20'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.0'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
	implementation 'org.apache.commons:commons-dbcp2:2.9.0'
	// https://mvnrepository.com/artifact/org.springframework/spring-jdbc
	implementation 'org.springframework:spring-jdbc:5.3.20'
	// ----------------------- Spring Security dependencies ------------------------
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
	implementation 'org.springframework.security:spring-security-web:5.7.1'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
	implementation 'org.springframework.security:spring-security-config:5.7.1'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
	implementation 'org.springframework.security:spring-security-crypto:5.7.1'
	//	------------------------- Servlet and JSP related dependencies -------------
	// https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api
	compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
	// https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/javax.servlet.jsp.jstl-api
	implementation 'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.2'
	// https://mvnrepository.com/artifact/javax.validation/validation-api
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	// https://mvnrepository.com/artifact/org.webjars.npm/bootstrap
	implementation group: 'org.webjars.npm', name: 'bootstrap', version: '5.2.0-beta1'
	// ---------------------------------- SAML2 ------------------------------------
	// https://mvnrepository.com/artifact/org.springframework.security.extensions/spring-security-saml2-core
	implementation 'org.springframework.security.extensions:spring-security-saml2-core:1.0.10.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security.extensions/spring-security-saml-dsl-core
	implementation 'org.springframework.security.extensions:spring-security-saml-dsl-core:1.0.5.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-saml2-service-provider
	implementation 'org.springframework.security:spring-security-saml2-service-provider:5.7.1'
	// ---------------------------------- DOCKER ------------------------------------
	// https://mvnrepository.com/artifact/com.bmuschko/gradle-docker-plugin
	implementation 'com.bmuschko:gradle-docker-plugin:6.7.0'
	// ------------------------------------------------------------------------------
	// https://mvnrepository.com/artifact/org.apache.taglibs/taglibs-standard-impl
	runtimeOnly 'org.apache.taglibs:taglibs-standard-impl:1.2.5'
	// https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'net.sourceforge.htmlunit:htmlunit:2.44.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.awaitility:awaitility:4.2.0'
	testImplementation 'io.projectreactor:reactor-test'
}

docker {
	name "${dockerHub}/${project.name}:${project.version}"
	tag 'DockerHub', "${dockerHub}/${project.name}:${project.version}"
	dockerfile file('src/docker/Dockerfile')
	copySpec.from("build/libs").into("app")
	files "${project.name}-${project.version}.jar"   // adds resulting *.tgz to the build context
	buildArgs([BUILD_VERSION: "${project.version}"])
	//	labels(['key': 'value'])
	//	pull true
	//	noCache true
}

dockerRun {
	name "${project.name}"
	image "dalexander2israel/${project.name}:${project.version}"
	ports '8443:8443'
	daemonize true
	arguments "-d"
	command 'sleep', 'infinity'
	clean true
}


tasks.named('test') {
	useJUnitPlatform()
}


// Iterable gets an each() method
configurations.runtimeClasspath.each { File f -> println f.name }

// Using a getter method
println "Project Directory: " +  project.buildDir